version: '3.8'

services:
  # MySQL Database Service
  # This service runs a MySQL database server
  # It is used to store the data for the application
  # The database is exposed on port 3306
  # The data is persisted in a Docker volume
  mysql:
    image: mysql:8.0      # Use the official MySQL 8.0 image
    container_name: mysql_container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword               # Root user's password (change for production)
      MYSQL_DATABASE: crud_operations                     # Database name
      MYSQL_USER: myuser                           # Regular user
      MYSQL_PASSWORD: mypassword                    # Password for `MYSQL_USER`
    ports:
      - "3306:3306"                                   # Expose MySQL on port 3306
    volumes:
      - db_data:/var/lib/mysql                        # Persist data in a Docker volume
    networks:
      - todo_network # To check docker network > docker network ls | grep todo_network
    # Healthcheck
    # This checks if the MySQL server is up and running
    # It will retry 10 times with a timeout of 20 seconds
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # phpMyAdmin Service
  # phpMyAdmin is a web interface for MySQL
  # It allows you to manage your MySQL databases easily
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest                 # Use the latest phpMyAdmin image
    container_name: phpmyadmin_container                # Name the phpMyAdmin container
    restart: always                                     # Restart the container automatically if it crashes
    environment:
      PMA_HOST: mysql                                   # Hostname of the MySQL server (matches the `mysql` service)
      PMA_USER: root                                    # MySQL root user for phpMyAdmin
      PMA_PASSWORD: rootpassword                       # Password for the MySQL root user
    ports:
      - "8085:80"                                       # Expose phpMyAdmin on port 8080
    depends_on:
      - mysql                                           # Ensure that the MySQL container starts before phpMyAdmin
    networks:
      - todo_network # To check docker network > docker network ls | grep todo_network

  # Node.js Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - DB_HOST=mysql # Change to your MySQL host
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
      - DB_DATABASE=crud_operations
    volumes:
      - ./server:/usr/src/app
    depends_on:
      mysql:
        condition: service_healthy # Wait for MySQL to be healthy before starting the backend
    networks:
      - todo_network # To check docker network > docker network ls | grep todo_network

  # React Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - VITE_API_URL=http://<Your Machine IP>:3000 # Change to your backend API URL Like http://192.168.81.207:3000
    depends_on:
      - backend
    networks:
      - todo_network # To check docker network > docker network ls | grep todo_network

volumes:                                              # Define volume for data persistence
  db_data:

networks:
  todo_network:
    name: todo_network
    driver: bridge
